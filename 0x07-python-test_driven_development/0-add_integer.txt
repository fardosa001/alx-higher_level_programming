"0-add_integer" module"

Import module:

>>> add_integer = __import__('0-add_integer').add_integer

Testcases

# a = float, b = float
>>> add_integer(10.5, 3.5)
13

# a = int, b = int
>>> add_integer(5, 5)
10

# a = int, b = default value
>>> add_integer(10)
108

# a = float, b = int
>>> add_integer(10.5, 3)
13

# a = negative int, b = int
>>> add_integer(-1, 5)
4

# a = str, b = int
>>> add_integer("10", 10)
Traceback (most recent call last):
...
TypeError: a must be an integer

# a = int, b = str
>>> add_integer(15, "15")
Traceback (most recent call last):
...
TypeError: b must be an integer

# a = str, b = str
>>> add_integer("12", "amy")
Traceback (most recent call last):
...
TypeError: a must be an integer

# a = [], b = int
>>> add_integer([2, 3], 10)
Traceback (most recent call last):
...
TypeError: a must be an integer

# a = int, b = []
>>> add_integer(12, [3, 4])
Traceback (most recent call last):
...
TypeError: b must be an integer

# a = None, b = int
>>> add_integer(None, 20)
Traceback (most recent call last):
...
TypeError: a must be an integer

